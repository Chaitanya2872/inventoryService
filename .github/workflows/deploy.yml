name: CI/CD - Inventory Service

on:
  push:
    branches:
      - master
  workflow_dispatch:   # allows manual trigger

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    env:
      ECR_REPOSITORY: 474221740713.dkr.ecr.ap-northeast-3.amazonaws.com/inventory-service_1
      IMAGE_TAG: latest
      AWS_REGION: ap-northeast-3
      CONTAINER_NAME: inventory-service_1
      EC2_PORT: 8082

    steps:
      # 1️⃣ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3️⃣ Build JAR
      - name: Build project
        run: mvn clean package

      # 4️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # 5️⃣ Login to ECR
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      # 6️⃣ Build Docker image
      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

      # 7️⃣ Push Docker image to ECR
      - name: Push Docker image
        run: |
          docker push $ECR_REPOSITORY:$IMAGE_TAG

      # 8️⃣ Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull latest image
            docker pull $ECR_REPOSITORY:$IMAGE_TAG

            # Stop and remove old container
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            # Run new container
            docker run -d --name $CONTAINER_NAME -p $EC2_PORT:8080 $ECR_REPOSITORY:$IMAGE_TAG

            # Show container logs
            docker logs -f $CONTAINER_NAME
